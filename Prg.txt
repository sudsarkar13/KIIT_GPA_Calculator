# Python program to create a
# GUI mark sheet using tkinter
 
 
# Import tkinter as tk
import tkinter as tk
 
 
# creating a new tkinter window
master = tk.Tk()
 
# assigning a title
master.title("MARKSHEET")
 
# specifying geometry for window size
master.geometry("700x250")
 
 
# declaring objects for entering data
e1 = tk.Entry(master)
e2 = tk.Entry(master)
e3 = tk.Entry(master)
e4 = tk.Entry(master)
e5 = tk.Entry(master)
e6 = tk.Entry(master)
e7 = tk.Entry(master)
 
 
# function to display the total subject
# credits total credits and SGPA according
# to grades entered
def display():
 
    # Variable to store total marks
    tot = 0
 
    # 10*number of subject credits
    # give total credits for grade A
    if e4.get() == "A":
 
        # grid method is used for placing
        # the widgets at respective positions
        # in table like structure .
        tk.Label(master, text="40").grid(row=3, column=4)
        tot += 40
 
    # 9*number of subject credits give
    # total credits for grade B
    if e4.get() == "B":
        tk.Label(master, text="36").grid(row=3, column=4)
        tot += 36
 
    # 8*number of subject credits give
    # total credits for grade C
    if e4.get() == "C":
        tk.Label(master, text="32").grid(row=3, column=4)
        tot += 32
 
    # 7*number of subject credits
    # give total credits for grade D
    if e4.get() == "D":
        tk.Label(master, text="28").grid(row=3, column=4)
        tot += 28
 
    # 6*number of subject credits give
    # total credits for grade P
    if e4.get() == "P":
        tk.Label(master, text="24").grid(row=3, column=4)
        tot += 24
 
    # 0*number of subject credits give
    # total credits for grade F
    if e4.get() == "F":
        tk.Label(master, text="0").grid(row=3, column=4)
        tot += 0
 
    # Similarly doing with other objects
    if e5.get() == "A":
        tk.Label(master, text="40").grid(row=4, column=4)
        tot += 40
    if e5.get() == "B":
        tk.Label(master, text="36").grid(row=4, column=4)
        tot += 36
    if e5.get() == "C":
        tk.Label(master, text="32").grid(row=4, column=4)
        tot += 32
    if e5.get() == "D":
        tk.Label(master, text="28").grid(row=4, column=4)
        tot += 28
    if e5.get() == "P":
        tk.Label(master, text="28").grid(row=4, column=4)
        tot += 24
    if e5.get() == "F":
        tk.Label(master, text="0").grid(row=4, column=4)
        tot += 0
 
    if e6.get() == "A":
        tk.Label(master, text="30").grid(row=5, column=4)
        tot += 30
    if e6.get() == "B":
        tk.Label(master, text="27").grid(row=5, column=4)
        tot += 27
    if e6.get() == "C":
        tk.Label(master, text="24").grid(row=5, column=4)
        tot += 24
    if e6.get() == "D":
        tk.Label(master, text="21").grid(row=5, column=4)
        tot += 21
    if e6.get() == "P":
        tk.Label(master, text="28").grid(row=5, column=4)
        tot += 24
    if e6.get() == "F":
        tk.Label(master, text="0").grid(row=5, column=4)
        tot += 0
 
    if e7.get() == "A":
        tk.Label(master, text="40").grid(row=6, column=4)
        tot += 40
    if e7.get() == "B":
        tk.Label(master, text="36").grid(row=6, column=4)
        tot += 36
    if e7.get() == "C":
        tk.Label(master, text="32").grid(row=6, column=4)
        tot += 32
    if e7.get() == "D":
        tk.Label(master, text="28").grid(row=6, column=4)
        tot += 28
    if e7.get() == "P":
        tk.Label(master, text="28").grid(row=6, column=4)
        tot += 24
    if e7.get() == "F":
        tk.Label(master, text="0").grid(row=6, column=4)
        tot += 0
 
    # to display total credits
    tk.Label(master, text=str(tot)).grid(row=7, column=4)
 
    # to display SGPA
    tk.Label(master, text=str(tot/15)).grid(row=8, column=4)
 
 
# end of display function
 
# label to enter name
tk.Label(master, text="Name").grid(row=0, column=0)
 
# label for registration number
tk.Label(master, text="Reg.No").grid(row=0, column=3)
 
# label for roll Number
tk.Label(master, text="Roll.No").grid(row=1, column=0)
 
# labels for serial numbers
tk.Label(master, text="Srl.No").grid(row=2, column=0)
tk.Label(master, text="1").grid(row=3, column=0)
tk.Label(master, text="2").grid(row=4, column=0)
tk.Label(master, text="3").grid(row=5, column=0)
tk.Label(master, text="4").grid(row=6, column=0)
 
 
# labels for subject codes
tk.Label(master, text="Subject").grid(row=2, column=1)
tk.Label(master, text="CS 201").grid(row=3, column=1)
tk.Label(master, text="CS 202").grid(row=4, column=1)
tk.Label(master, text="MA 201").grid(row=5, column=1)
tk.Label(master, text="EC 201").grid(row=6, column=1)
 
 
# label for grades
tk.Label(master, text="Grade").grid(row=2, column=2)
e4.grid(row=3, column=2)
e5.grid(row=4, column=2)
e6.grid(row=5, column=2)
e7.grid(row=6, column=2)
 
 
# labels for subject credits
tk.Label(master, text="Sub Credit").grid(row=2, column=3)
tk.Label(master, text="4").grid(row=3, column=3)
tk.Label(master, text="4").grid(row=4, column=3)
tk.Label(master, text="3").grid(row=5, column=3)
tk.Label(master, text="4").grid(row=6, column=3)
 
tk.Label(master, text="Credit obtained").grid(row=2, column=4)
 
# taking entries of name, reg, roll number respectively
e1 = tk.Entry(master)
e2 = tk.Entry(master)
e3 = tk.Entry(master)
 
# organizing them in the grid
e1.grid(row=0, column=1)
e2.grid(row=0, column=4)
e3.grid(row=1, column=1)
 
# button to display all the calculated credit scores and sgpa
button1 = tk.Button(master, text="submit", bg="green", command=display)
button1.grid(row=8, column=1)
 
 
tk.Label(master, text="Total credit").grid(row=7, column=3)
tk.Label(master, text="SGPA").grid(row=8, column=3)
 
 
master.mainloop()


#prog guide
KIIT@BT-21053056 MINGW64 /c/SUDEEPTA/My Projects/GUI KIIT CGPA_SGPA
$ cookiecutter https://github.com/audreyr/cookiecutter-pypackage
You've downloaded C:\Users\KIIT\.cookiecutters\cookiecutter-pypackage before. Is it okay to delete and re-download it? [yes]: no
Do you want to re-use the existing version? [yes]: yes
full_name [Audrey Roy Greenfeld]: Sudeepta Sarkar
email [audreyr@example.com]: sudsarkar13@gmail.com
github_username [audreyr]: sudsarkar13
project_name [Python Boilerplate]: KIIT_SGPA/CGPA
project_slug [kiit_sgpa/cgpa]: kiit_sgpa/cgpa
project_short_description [Python Boilerplate contains all the boilerplate you need to create a Python package.]: A GUI based python program which can take input of pre-declared grading system, session, semester, subjects, credits of each subject, and calculate the total marks secured as well as calculate the SGPA and CGPA.
pypi_username [sudsarkar13]: sudsarkar13
version [0.1.0]: 0.1.0
use_pytest [n]: y
use_black [n]: n
use_pypi_deployment_with_travis [y]: n
add_pyup_badge [n]: n
Select command_line_interface:
1 - Click
2 - Argparse
3 - No command-line interface
Choose from 1, 2, 3 [1]: 1
create_author_file [y]: y
Select open_source_license:
1 - MIT license
2 - BSD license
3 - ISC license
4 - Apache Software License 2.0
5 - GNU General Public License v3
6 - Not open source
Choose from 1, 2, 3, 4, 5, 6 [1]: 1
ERROR: The project slug (kiit_sgpa/cgpa) is not a valid Python module name. Please do not use a - and use _ instead
ERROR: Stopping generation because pre_gen_project hook script didn't exit successfully
Hook script failed (exit status: 1)